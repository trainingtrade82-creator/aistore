
'use client';

import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Slider } from '@/components/ui/slider';
import { Textarea } from '@/components/ui/textarea';
import { Wand2, ChevronDown, Clipboard, Save, Send, Clock, Bot, Edit, Copy, ChevronRight, FileText } from 'lucide-react';
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';

const examplePrompts = [
    { title: 'Pitch to investor', prompt: 'Draft a concise email to a VC introducing our new AI-powered analytics platform.' },
    { title: 'Follow-up after meeting', prompt: 'Write a friendly follow-up email to John from Acme Corp after our demo call today.' },
    { title: 'Job application', prompt: 'Compose a formal cover letter for a Senior Product Manager role, highlighting my 5 years of experience in SaaS.' },
]

function EmailWriterDashboard() {
  const [prompt, setPrompt] = useState('');
  const [generatedSubject, setGeneratedSubject] = useState('');
  const [generatedBody, setGeneratedBody] = useState('');

  const handleGenerate = () => {
    // Placeholder for AI generation logic
    setGeneratedSubject('Example Subject: Your Next-Gen Email Assistant');
    setGeneratedBody(
`Hi {Name},

This is a sample email generated by the AI Store Email Writer. You can edit this text directly.

With this tool, you can:
- Compose emails from scratch
- Reply to incoming messages instantly
- Choose from various tones and lengths

Click "Get Variations" to see different versions of this email.

Best,
AI Store Bot`
    );
  };

  return (
    <div className="flex flex-col md:flex-row gap-4 p-4 h-[calc(100vh-80px)] bg-muted/20">
      {/* Left Column: Context & Options */}
      <div className="md:w-[30%] flex flex-col gap-4">
        <Card className="flex-grow flex flex-col">
            <CardHeader>
                <CardTitle className="text-lg">Context & Options</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4 overflow-y-auto">
                <div className="space-y-2">
                    <Label htmlFor="use-case">Use Case</Label>
                    <Select defaultValue="compose">
                        <SelectTrigger id="use-case">
                            <SelectValue placeholder="Select a use case" />
                        </SelectTrigger>
                        <SelectContent>
                            <SelectItem value="compose">Compose</SelectItem>
                            <SelectItem value="reply">Reply</SelectItem>
                            <SelectItem value="follow-up">Follow-up</SelectItem>
                            <SelectItem value="cold-outreach">Cold Outreach</SelectItem>
                            <SelectItem value="job-app">Job Application</SelectItem>
                            <SelectItem value="customer-support">Customer Support</SelectItem>
                        </SelectContent>
                    </Select>
                </div>

                <div className="space-y-2">
                    <Label htmlFor="tone">Tone</Label>
                     <Select defaultValue="friendly">
                        <SelectTrigger id="tone">
                            <SelectValue placeholder="Select a tone" />
                        </SelectTrigger>
                        <SelectContent>
                            <SelectItem value="formal">Formal</SelectItem>
                            <SelectItem value="friendly">Friendly</SelectItem>
                            <SelectItem value="persuasive">Persuasive</SelectItem>
                            <SelectItem value="concise">Concise</SelectItem>
                            <SelectItem value="assertive">Assertive</SelectItem>
                        </SelectContent>
                    </Select>
                </div>
                
                <div className="space-y-2">
                    <Label>Length</Label>
                    <div className="flex items-center gap-4 text-sm text-muted-foreground">
                        <span>One-line</span>
                        <Slider defaultValue={[50]} max={100} step={1} />
                        <span>Detailed</span>
                    </div>
                </div>

                <div className="space-y-2">
                    <Label htmlFor="recipients">Recipients (optional)</Label>
                    <Input id="recipients" placeholder="e.g., team@example.com" />
                </div>

                <div className="space-y-2">
                    <Label htmlFor="subject">Subject</Label>
                    <div className="flex items-center gap-2">
                        <Input id="subject" placeholder="Your email subject" value={generatedSubject} onChange={e => setGeneratedSubject(e.target.value)} />
                        <Button variant="outline" size="icon" aria-label="Suggest subject">
                            <Wand2 className="h-4 w-4" />
                        </Button>
                    </div>
                </div>
                 <div className="space-y-2">
                    <Label htmlFor="cta">Call-to-action (optional)</Label>
                    <Input id="cta" placeholder="e.g., Book a demo, Read the post" />
                </div>
                <div className="space-y-2">
                    <Label htmlFor="deadline">Deadline (optional)</Label>
                    <Input id="deadline" placeholder="e.g., EOD Friday" />
                </div>
            </CardContent>
        </Card>
      </div>

      {/* Center Column: Editor / Output */}
      <div className="md:w-[55%] flex flex-col gap-4">
        <div className="space-y-2 flex-shrink-0">
            <Label htmlFor="prompt">Context / Paste Incoming Email / Write Bullets</Label>
            <Textarea
                id="prompt"
                placeholder="e.g., Write a follow-up email to a potential client met at a conference..."
                value={prompt}
                onChange={(e) => setPrompt(e.target.value)}
                className="min-h-[100px]"
            />
            <Button className="w-full" onClick={handleGenerate}>
                <Bot className="mr-2 h-4 w-4" /> Craft My Email
            </Button>
        </div>
        <Card className="flex-grow flex flex-col">
            <CardContent className="p-4 flex-grow flex flex-col">
                {generatedBody ? (
                    <>
                        <div className="flex-grow h-0 overflow-y-auto p-2 rounded-md bg-background border">
                           <Textarea className="w-full h-full border-0 resize-none focus-visible:ring-0" value={generatedBody} onChange={e => setGeneratedBody(e.target.value)} />
                        </div>
                        <div className="flex flex-wrap items-center gap-2 mt-4 pt-4 border-t">
                            <DropdownMenu>
                                <DropdownMenuTrigger asChild>
                                    <Button variant="outline">
                                        <Edit className="mr-2 h-4 w-4" /> Refine <ChevronDown className="ml-2 h-4 w-4" />
                                    </Button>
                                </DropdownMenuTrigger>
                                <DropdownMenuContent>
                                    <DropdownMenuItem>Shorten</DropdownMenuItem>
                                    <DropdownMenuItem>Expand</DropdownMenuItem>
                                    <DropdownMenuItem>Make More Formal</DropdownMenuItem>
                                    <DropdownMenuItem>Make More Friendly</DropdownMenuItem>
                                    <DropdownMenuItem>Add CTA</DropdownMenuItem>
                                    <DropdownMenuItem>Fix Grammar</DropdownMenuItem>
                                </DropdownMenuContent>
                            </DropdownMenu>
                             <Button variant="outline"><Copy className="mr-2 h-4 w-4" /> Get Variations</Button>
                            <Button variant="outline"><FileText className="mr-2 h-4 w-4" /> Save Template</Button>
                             <div className="flex-grow" />
                            <Button variant="outline"><Clipboard className="mr-2 h-4 w-4" /> Copy</Button>
                            <Button variant="outline"><Save className="mr-2 h-4 w-4" /> Save Draft</Button>
                            <Button variant="outline"><Clock className="mr-2 h-4 w-4" /> Schedule</Button>
                            <Button className="bg-accent text-accent-foreground hover:bg-accent/90"><Send className="mr-2 h-4 w-4" /> Send</Button>
                        </div>
                    </>
                ) : (
                    <div className="flex-grow flex items-center justify-center text-center text-muted-foreground">
                        <p>Your generated email will appear here.</p>
                    </div>
                )}
            </CardContent>
        </Card>
      </div>

      {/* Right Column: Helpers & History */}
      <div className="md:w-[15%] flex flex-col gap-4">
        <Card className="flex-grow flex flex-col">
            <CardHeader>
                <CardTitle className="text-lg">Quick Examples</CardTitle>
            </CardHeader>
            <CardContent className="space-y-2 flex-grow overflow-y-auto">
               {examplePrompts.map(ex => (
                   <button key={ex.title} onClick={() => setPrompt(ex.prompt)} className="text-left text-sm p-2 rounded-md hover:bg-muted w-full">
                       <p className="font-semibold">{ex.title}</p>
                       <p className="text-muted-foreground truncate">{ex.prompt}</p>
                   </button>
               ))}
            </CardContent>
        </Card>
        <Card className="flex-grow flex flex-col">
            <CardHeader>
                <CardTitle className="text-lg">History</CardTitle>
            </CardHeader>
            <CardContent className="flex-grow flex items-center justify-center text-center text-muted-foreground">
                <p className="text-sm">Saved drafts will appear here.</p>
            </CardContent>
        </Card>
      </div>
    </div>
  );
}

export default function DashboardPage() {
  return <EmailWriterDashboard />;
}

    